/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.view;

import com.mycompany.dao.EntregaDAO;
import com.mycompany.dao.EntregaRepuestoDAO;
import com.mycompany.dao.ProductoDAO;
import com.mycompany.dao.RepuestoDAO;
import com.mycompany.dao.ServicioDAO;
import com.mycompany.entity.Entrega;
import com.mycompany.entity.EntregaRepuesto;
import com.mycompany.entity.Producto;
import com.mycompany.entity.Repuestos;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Date;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JJAB
 */
public class IfrmEntregar extends javax.swing.JInternalFrame {

    private DefaultTableModel tableModel1;
    private DefaultTableModel tableModel2;
    //
    private RepuestoDAO repuetoDAO = new RepuestoDAO();
    private EntregaDAO entregaDAO = new EntregaDAO();
    private ProductoDAO productoDAO = new ProductoDAO();
    private ServicioDAO servicioDAO = new ServicioDAO();
    private EntregaRepuestoDAO entregaRepuestoDAO = new EntregaRepuestoDAO();
    //
    private Entrega entrega = new Entrega();
    private EntregaRepuesto entregaRepuesto = new EntregaRepuesto();
    private int idProducto;

    /**
     * Creates new form IfrmEntregar
     */
    public IfrmEntregar() {
        initComponents();
        creartabla();
    }

    public void obtenerIdProducto(int id) {
        idProducto = id;
    }

    private void creartabla() {

        String[] repuestos = new String[]{"id", "repuesto", "Stock", "precio", "marca"};
        tableModel1 = new DefaultTableModel(repuestos, 0);

        String[] entrega = new String[]{"id", "repuesto", "Cantidad", "precio", "total", "marca"};
        tableModel2 = new DefaultTableModel(entrega, 0);

        tblRepuestos.setModel(tableModel1);

        tblAgregado.setModel(tableModel2);

        List<Repuestos> ListR = repuetoDAO.obtenerRepuestos();

        if (ListR.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay elementos");
        } else {

            for (Repuestos r : ListR) {
                tableModel1.addRow(new Object[]{r.getIdRepuestos(), r.getRepuesto(), r.getStock(),
                    r.getPrecio(), r.getMarcaIdmarca()});
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbServicio = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRepuestos = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAgregado = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnEntregar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Hacer Entrega");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel1.setText("Servicio");

        cmbServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reparacion", "Limpieza" }));

        tblRepuestos.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblRepuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblRepuestos);

        btnAgregar.setBackground(new java.awt.Color(204, 204, 0));
        btnAgregar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblAgregado.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblAgregado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblAgregado);

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEntregar.setBackground(new java.awt.Color(0, 0, 204));
        btnEntregar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnEntregar.setForeground(new java.awt.Color(255, 255, 255));
        btnEntregar.setText("Entregar");
        btnEntregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnAgregar))
                                .addGap(0, 608, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar)
                            .addComponent(btnEntregar))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(btnEntregar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        //Obtener el stock
        int stock = (int) tblRepuestos.getModel().getValueAt(tblRepuestos.getSelectedRow(), 2);

        if (stock < 1) {
            JOptionPane.showMessageDialog(this, "No Hay Stock Disponible");
        } else {

            //Restar 1 al stock
            tblRepuestos.getModel().setValueAt(stock - 1, tblRepuestos.getSelectedRow(), 2);

            try {

                //Guardar todas las columnas de la fila seleccionada en un array para luego pasarlas a la segunda tabla
                Object re[] = new Object[6];
                for (int i = 0; i < 5; i++) {
                    if (i == 4) {
                        re[5] = tblRepuestos.getModel().getValueAt(tblRepuestos.getSelectedRow(), 4);

                        re[4] = tblRepuestos.getModel().getValueAt(tblRepuestos.getSelectedRow(), 3);

                    } else {

                        re[i] = tblRepuestos.getModel().getValueAt(tblRepuestos.getSelectedRow(), i);
                    }
                }

                //Se agrega la fila seleccionada de la primera tabla en la segunda tabla
                //Y se inicializa la columna cantidad en 1
                tableModel2.addRow(new Object[]{re[0], re[1], re[2] = 1, re[3], re[4], re[5]});

                //Recorrer la segunda tabla para buscar si el id de la nueva fila coincide con una fila ya existente
                //En caso de ser cierto no agrega una nueva fila
                //Se modifica la fila con el mismo id para aumentar su cantidad
                for (int i = 0; i < tableModel2.getRowCount() - 1; i++) {

                    //Obtener la primera columna que correcponde al Id
                    int idTabla2 = (int) tableModel2.getValueAt(i, 0);

                    //Comparar el id de la primera tabla con el id de la segunda tabla
                    if ((int) re[0] == idTabla2) {

                        int cantidad = (int) tableModel2.getValueAt(i, 2);

                        String precio = "" + tableModel2.getValueAt(i, 3);

                        tblAgregado.getModel().setValueAt(cantidad + 1, i, 2);

                        BigDecimal totalDecimal = new BigDecimal(cantidad + 1);
                        BigDecimal precioDecimal = new BigDecimal(precio);

                        tblAgregado.getModel().setValueAt(totalDecimal.multiply(precioDecimal), i, 4);

                        tableModel2.removeRow(tableModel2.getRowCount() - 1);

                    }

                }

            } catch (Exception e) {
                System.out.println("error tabla " + e);
                JOptionPane.showMessageDialog(this, "Seleccione una fila");
            }

        }


    }//GEN-LAST:event_btnAgregarActionPerformed


    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            while (true) {
                tableModel2.removeRow(0);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEntregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntregarActionPerformed

        double ttal = 0;

        //Actualizar el stock en la base de datos
        for (int i = 0; i < tableModel2.getRowCount(); i++) {

            ttal = ttal + Double.parseDouble("" + tableModel2.getValueAt(i, 4));

            int id = (int) tableModel2.getValueAt(i, 0);
            int stock = (int) tableModel1.getValueAt(i, 2);

            repuetoDAO.actualizarStock(id, stock);

        }

        if (ttal != 0) {

            entrega.setFechaentrega(new Date());

            BigDecimal mValue = new BigDecimal(ttal);
            BigDecimal roundValue = mValue.setScale(2, RoundingMode.HALF_UP);

            entrega.setTotal(roundValue);

            entrega.setProductoIdproducto(productoDAO.obtenerObjetoProductoporId(idProducto));
            entrega.setServicioIdservicio(servicioDAO.obtenerObjetoServicioporId(1));

            entregaDAO.guardarEntrega(entrega);

            for (int i = 0; i < tableModel2.getRowCount(); i++) {

                entregaRepuesto.setEntregaIdentrega(entrega);

                entregaRepuesto.setRepuestosidRepuestos(repuetoDAO.obtenerRepuestoId((int) tableModel2.getValueAt(i, 0)));

                entregaRepuestoDAO.guardarEntregaRepuesto(entregaRepuesto);

            }

            Principal.panel.removeAll();
            Principal.panel.repaint();

            IfrmFactura factura = new IfrmFactura();
            factura.setVisible(true);

            factura.obtenerDatos(entrega, entregaRepuesto, entregaRepuestoDAO);

            Principal.panel.add(factura);
        }

    }//GEN-LAST:event_btnEntregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEntregar;
    private javax.swing.JComboBox<String> cmbServicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAgregado;
    private javax.swing.JTable tblRepuestos;
    // End of variables declaration//GEN-END:variables
}
